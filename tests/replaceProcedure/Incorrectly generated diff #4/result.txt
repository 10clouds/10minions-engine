export function stripAllComments(code: string[]): string[] {
  const lineCommentsRegex = /\/\/.*|#[^\n]*/g;
  const blockCommentsRegex = /\/\*[^*]*\*+(?:[^/*][^*]*\*+)*\//g;
  const pythonBlockCommentsRegex = /'{3}[\s\S]*?'{3}|"{3}[\s\S]*?"{3}/g;

  // Join all of the lines of code into a single string
  let codeStr = code.join('\n');

  // Apply the three regex patterns to remove all comments from the code
  codeStr = codeStr.replace(lineCommentsRegex, '');
  codeStr = codeStr.replace(blockCommentsRegex, '');
  codeStr = codeStr.replace(pythonBlockCommentsRegex, '');

  // Split the code back into lines
  let cleanedCode = codeStr.split('\n');

  // Also, create an array to store the indices of lines that should be removed
  const linesToRemove = [];

  // Iterate over original code line by line
  for (let i = 0; i < code.length; i++) {
    // If the original line had a comment
    if (code[i].match(lineCommentsRegex) || code[i].match(blockCommentsRegex) || code[i].match(pythonBlockCommentsRegex)) {
      // And if after removing the comments, the line is now empty
      if (cleanedCode[i].trim() == '') {
        // Note this line index to be removed from final cleanedCode array
        linesToRemove.push(i);
      }
    }
  }
  
  // Now remove the marked lines from cleanedCode
  for (let i = linesToRemove.length - 1; i >= 0; i--){
     cleanedCode.splice(linesToRemove[i], 1);
  }

  return cleanedCode;
}